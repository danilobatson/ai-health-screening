name: Vercel Deployment Status

on:
  deployment_status:
    # Triggered when Vercel deployment status changes

jobs:
  deployment-monitor:
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success' || github.event.deployment_status.state == 'failure'

    steps:
      - name: Deployment Success
        if: github.event.deployment_status.state == 'success'
        run: |
          echo "üéâ Vercel Deployment Successful!"
          echo "Environment: ${{ github.event.deployment.environment }}"
          echo "URL: ${{ github.event.deployment_status.target_url }}"
          echo "Commit: ${{ github.sha }}"

          # Post-deployment health checks could go here
          echo "‚úÖ Deployment monitoring complete"

      - name: Deployment Failure
        if: github.event.deployment_status.state == 'failure'
        run: |
          echo "‚ùå Vercel Deployment Failed!"
          echo "Environment: ${{ github.event.deployment.environment }}"
          echo "Check Vercel dashboard for details"
          echo "Commit: ${{ github.sha }}"

          # Alert mechanisms could go here
          exit 1

  post-deployment-tests:
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success' && github.event.deployment.environment == 'production'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Production Health Check
        run: |
          echo "üîç Running post-deployment health checks..."

          # Wait for deployment to be fully ready
          sleep 30

          # Basic health check
          if curl -f "${{ github.event.deployment_status.target_url }}/api/health" > /dev/null 2>&1; then
            echo "‚úÖ Health endpoint responding"
          else
            echo "‚ùå Health endpoint not responding"
            echo "üö® Consider rollback"
            exit 1
          fi

          echo "‚úÖ Post-deployment tests passed"

  notify-deployment:
    runs-on: ubuntu-latest
    needs: [deployment-monitor, post-deployment-tests]
    if: always()

    steps:
      - name: Deployment Notification
        run: |
          if [ "${{ needs.deployment-monitor.result }}" == "success" ] && [ "${{ needs.post-deployment-tests.result }}" == "success" ]; then
            echo "‚úÖ Deployment completed successfully with all health checks passed"
          else
            echo "‚ö†Ô∏è  Deployment completed but some checks failed"
          fi
